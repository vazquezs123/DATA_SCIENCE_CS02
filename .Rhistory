pairs(~Attrition+YearlyIncome+Age+Gender+JobInvolvement+JobSatisfaction+JobLevel+Education+
YearsSinceLastPromotion+attritionData$MaritalStatus, aes(fill=gender),data=attritionData,
main="Simple Scatterplot Matrix")
setwd("C:\\Users\\vazqu\\Documents\\SMU\\data_science\\CaseStudy2_2\\DATA_SCIENCE_CS02")
library(openxlsx)
library(MASS)
library(ggplot2)
library(classInt)
attritionData <- read.xlsx("CaseStudy2-data.xlsx")
# general landscape of attritiion - how many attritions?
# clearly more no; not common to leave
attritionYesCount <- length(attritionData$Attrition[attritionData$Attrition== "Yes"]) # 237
attritionNoCount <- length(attritionData$Attrition[attritionData$Attrition== "No"]) # 1233
attritionData$Attrition <- as.factor(attritionData$Attrition)
attritionData$Gender <- as.factor(attritionData$Gender)
attritionData$Age <- as.integer(attritionData$Age)
attritionData$JobRole <- as.factor(attritionData$JobRole)
attritionData$MaritalStatus <- as.factor(attritionData$MaritalStatus)
attritionData$AgeGroups <- cut(attritionData$Age, breaks=c(10,20,30,40,50,60))
attritionData$MonthlyIncomeGroup <-cut(attritionData$MonthlyIncome,
breaks=data.frame(
classIntervals(
attritionData$MonthlyIncome, n=5,
method="quantile")[2])[,1],
include.lowest=T,dig.lab=10)
attritionData$YearlyIncome <- attritionData$MonthlyIncome*12
attritionData$YearlyIncomeGroup <- cut(attritionData$YearlyIncome,
breaks=data.frame(
classIntervals(
attritionData$YearlyIncome, n=5,
method="quantile")[2])[,1],
include.lowest=T,dig.lab=10)
attritionMaleCount <- length(attritionData$Gender[attritionYesData$Gender=="Male"])
attritionFemaleCount <- length(attritionData$Gender[attritionYesData$Gender == "Female"])
attritionYesData <- attritionData[attritionData$Attrition == "Yes",]
attritionYesMaleCount <- length(attritionYesData$Gender[attritionYesData$Gender=="Male"])
attritionYesFemaleCount <- length(attritionYesData$Gender[attritionYesData$Gender == "Female"])
setwd("C:\\Users\\vazqu\\Documents\\SMU\\data_science\\CaseStudy2_2\\DATA_SCIENCE_CS02")
library(openxlsx)
library(MASS)
library(ggplot2)
library(classInt)
attritionData <- read.xlsx("CaseStudy2-data.xlsx")
# general landscape of attritiion - how many attritions?
# clearly more no; not common to leave
attritionYesCount <- length(attritionData$Attrition[attritionData$Attrition== "Yes"]) # 237
attritionNoCount <- length(attritionData$Attrition[attritionData$Attrition== "No"]) # 1233
attritionData$Attrition <- as.factor(attritionData$Attrition)
attritionData$Gender <- as.factor(attritionData$Gender)
attritionData$Age <- as.integer(attritionData$Age)
attritionData$JobRole <- as.factor(attritionData$JobRole)
attritionData$MaritalStatus <- as.factor(attritionData$MaritalStatus)
attritionData$AgeGroups <- cut(attritionData$Age, breaks=c(10,20,30,40,50,60))
attritionData$MonthlyIncomeGroup <-cut(attritionData$MonthlyIncome,
breaks=data.frame(
classIntervals(
attritionData$MonthlyIncome, n=5,
method="quantile")[2])[,1],
include.lowest=T,dig.lab=10)
attritionData$YearlyIncome <- attritionData$MonthlyIncome*12
attritionData$YearlyIncomeGroup <- cut(attritionData$YearlyIncome,
breaks=data.frame(
classIntervals(
attritionData$YearlyIncome, n=5,
method="quantile")[2])[,1],
include.lowest=T,dig.lab=10)
attritionMaleCount <- length(attritionData$Gender[attritionData$Gender=="Male"])
attritionFemaleCount <- length(attritionData$Gender[attritionData$Gender == "Female"])
attritionYesData <- attritionData[attritionData$Attrition == "Yes",]
attritionYesMaleCount <- length(attritionYesData$Gender[attritionYesData$Gender=="Male"])
attritionYesFemaleCount <- length(attritionYesData$Gender[attritionYesData$Gender == "Female"])
pairs(~Attrition+YearlyIncome+Age+Gender+JobInvolvement+JobSatisfaction+JobLevel+Education+
YearsSinceLastPromotion+attritionData$MaritalStatus, aes(fill=gender),data=attritionData,
main="Simple Scatterplot Matrix")
pairs(~Attrition+YearlyIncome+Age+Gender+JobInvolvement+JobSatisfaction+JobLevel+Education+
YearsSinceLastPromotion+attritionData$MaritalStatus, aes(fill=Gender),data=attritionData,
main="Simple Scatterplot Matrix")
pairs(~Attrition+YearlyIncome+Age+Gender+JobInvolvement+JobSatisfaction+JobLevel+Education+
YearsSinceLastPromotion+attritionData$MaritalStatus,data=attritionData,
main="Simple Scatterplot Matrix")
pairs(~Attrition+DailyRate+Age+DistanceFromHome+EnvironmentSatisfaction+JobSatisfaction+MonthlyIncome+MonthlyRate+
YearsSinceLastPromotion,+PerformanceRating+JobInvolvement,data=attritionData,
main="Simple Scatterplot Matrix")
pairs(~Attrition+DailyRate+Age+DistanceFromHome+EnvironmentSatisfaction+JobSatisfaction+MonthlyIncome+MonthlyRate+
YearsSinceLastPromotion+PerformanceRating+JobInvolvement,data=attritionData,
main="Simple Scatterplot Matrix")
library(lattice)
library(hexbin)
install.packages("hexbin")
library(hexbin)
x <- rnorm(1000)
y <- rnorm(1000)
bin<-hexbin(x, y, xbins=50)
plot(bin, main="Hexagonal Binning")
head(x)
bin<-hexbin(attritionData$Age, attritionData$Attrition, xbins=50)
plot(bin, main="Hexagonal Binning")
bin<-hexbin(attritionData$Age, attritionData$YearlyIncome, xbins=50)
plot(bin, main="Attrion Age HeatMap")
bin<-hexbin(attritionData$Age, attritionData$MonthlyIncome, xbins=50)
plot(bin, main="Attrion Monthly Income HeatMap")
bin<-hexbin(attritionData$Age, attritionData$DistanceFromHome, xbins=50)
plot(bin, main="Attrion Distance From Home HeatMap")
head(bin)
hexbinplot(DistanceFromHome ~ Age | Attrition, attritionData)
hexbinplot(MonthlyIncome ~ Age | Attrition, attritionData)
names(attritionData)
glm.full <- glm(Attrition ~ DistanceFromHome + Age + MonthlyIncome + Education + HourlyRate + HourlyRate + MonthlyIncome + PerformanceRating + WorkLifeBalance +
MonthlyIncomeGroup + EducationField + JobInvolvement + MonthlyRate + RelationshipSatisfaction + YearsAtCompany + YearlyIncome + BusinessTravel +
EmployeeCount + JobLevel + NumCompaniesWorked + StandardHours + YearsInCurrentRole + YearsInCurrentRole + YearlyIncomeGroup + DailyRate +
EmployeeNumber + JobRole + Over18 + StockOptionLevel + YearsSinceLastPromotion + Department + EnvironmentSatisfaction, data = attritionData, family = binomial)
glm.null <- glm(Attrition ~ 1, data = attritionData, family = binomial)
knitr::opts_chunk$set(echo = TRUE)
attritionData$JobRole <- as.factor(attritionData$JobRole)
head(attritionData)
names(attritionData)
setwd("C:\\Users\\vazqu\\Documents\\SMU\\data_science\\CaseStudy2_2\\DATA_SCIENCE_CS02")
library(openxlsx)
library(MASS)
library(ggplot2)
library(classInt)
attritionData <- read.xlsx("CaseStudy2-data.xlsx")
# general landscape of attritiion - how many attritions?
# clearly more no; not common to leave
attritionYesCount <- length(attritionData$Attrition[attritionData$Attrition== "Yes"]) # 237
attritionNoCount <- length(attritionData$Attrition[attritionData$Attrition== "No"]) # 1233
attritionData$Attrition <- as.factor(attritionData$Attrition)
attritionData$Gender <- as.factor(attritionData$Gender)
attritionData$Age <- as.integer(attritionData$Age)
attritionData$JobRole <- as.factor(attritionData$JobRole)
attritionData$Education <- as.factor(attritionData$Education)
attritionData$BusinessTravel <- as.factor(attritionData$BusinessTravel)
attritionData$Department <- as.factor(attritionData$Department)
attritionData$EducationField <- as.factor(attritionData$EducationField)
attritionData$Gender <- as.factor(attritionData$Gender)
attritionData$MaritalStatus <- as.factor(attritionData$MaritalStatus)
attritionData$Over18 <- as.factor(attritionData$Over18)
attritionData$OverTime <- as.factor(attritionData$OverTime)
attritionData$MaritalStatus <- as.factor(attritionData$MaritalStatus)
attritionData$MaritalStatus <- as.factor(attritionData$MaritalStatus)
attritionData$MaritalStatus <- as.factor(attritionData$MaritalStatus)
attritionData$AgeGroups <- cut(attritionData$Age, breaks=c(10,20,30,40,50,60))
attritionData$MonthlyIncomeGroup <-cut(attritionData$MonthlyIncome,
breaks=data.frame(
classIntervals(
attritionData$MonthlyIncome, n=5,
method="quantile")[2])[,1],
include.lowest=T,dig.lab=10)
attritionData$YearlyIncome <- attritionData$MonthlyIncome*12
attritionData$YearlyIncomeGroup <- cut(attritionData$YearlyIncome,
breaks=data.frame(
classIntervals(
attritionData$YearlyIncome, n=5,
method="quantile")[2])[,1],
include.lowest=T,dig.lab=10)
attritionMaleCount <- length(attritionData$Gender[attritionData$Gender=="Male"])
attritionFemaleCount <- length(attritionData$Gender[attritionData$Gender == "Female"])
attritionYesData <- attritionData[attritionData$Attrition == "Yes",]
attritionYesMaleCount <- length(attritionYesData$Gender[attritionYesData$Gender=="Male"])
attritionYesFemaleCount <- length(attritionYesData$Gender[attritionYesData$Gender == "Female"])
glm.full <- glm(Attrition ~ DistanceFromHome + Age + MonthlyIncome + Education + HourlyRate + HourlyRate + MonthlyIncome + PerformanceRating + WorkLifeBalance +
MonthlyIncomeGroup + EducationField + JobInvolvement + MonthlyRate + RelationshipSatisfaction + YearsAtCompany + YearlyIncome + BusinessTravel +
EmployeeCount + JobLevel + NumCompaniesWorked + StandardHours + YearsInCurrentRole + YearsInCurrentRole + YearlyIncomeGroup + DailyRate +
EmployeeNumber + JobRole + Over18 + StockOptionLevel + YearsSinceLastPromotion + Department + EnvironmentSatisfaction, data = attritionData, family = binomial)
glm.null <- glm(Attrition ~ 1, data = attritionData, family = binomial)
glm.full <- glm(Attrition ~ DistanceFromHome + Age + MonthlyIncome + Education + HourlyRate + HourlyRate + MonthlyIncome + PerformanceRating + WorkLifeBalance), data = attritionData, family = binomial)
glm.null <- glm(Attrition ~ 1, data = attritionData, family = binomial)
glm.full <- glm(Attrition ~ DistanceFromHome + Age + MonthlyIncome + Education + HourlyRate + HourlyRate + MonthlyIncome + PerformanceRating + WorkLifeBalance, data = attritionData, family = binomial)
glm.null <- glm(Attrition ~ 1, data = attritionData, family = binomial)
glm.full <- glm(Attrition ~ DistanceFromHome + Age + MonthlyIncome + Education + HourlyRate + HourlyRate + MonthlyIncome + PerformanceRating + WorkLifeBalance, data = attritionData, family = binomial)
glm.full <- glm(Attrition ~ DistanceFromHome + Age + MonthlyIncome + Education + HourlyRate + HourlyRate + MonthlyIncome + PerformanceRating + WorkLifeBalance + EmployeeNumber + JobRole + Over18 + StockOptionLevel + YearsSinceLastPromotion + Department + EnvironmentSatisfaction, data = attritionData, family = binomial)
glm.full <- glm(Attrition ~ DistanceFromHome + Age + MonthlyIncome + Education + HourlyRate + HourlyRate + MonthlyIncome + PerformanceRating + WorkLifeBalance + EmployeeCount + JobLevel + NumCompaniesWorked + StandardHours + YearsInCurrentRole + YearsInCurrentRole + YearlyIncomeGroup + DailyRate
, data = attritionData, family = binomial)
glm.full <- glm(Attrition ~ DistanceFromHome + Age + MonthlyIncome + Education + HourlyRate + HourlyRate + MonthlyIncome + PerformanceRating + WorkLifeBalance + EmployeeCount + JobLevel + NumCompaniesWorked + StandardHours + YearsInCurrentRole + YearsInCurrentRole + YearlyIncomeGroup + DailyRate, data = attritionData, family = binomial)
glm.full <- glm(Attrition ~ DistanceFromHome + Age + MonthlyIncome + Education + HourlyRate + HourlyRate + MonthlyIncome + PerformanceRating + WorkLifeBalance +
EmployeeCount + JobLevel + NumCompaniesWorked + StandardHours + YearsInCurrentRole + YearsInCurrentRole + YearlyIncomeGroup + DailyRate +
EmployeeNumber, data = attritionData, family = binomial)
glm.full <- glm(Attrition ~ DistanceFromHome + Age + MonthlyIncome + Education + HourlyRate + HourlyRate + MonthlyIncome + PerformanceRating + WorkLifeBalance +
EmployeeCount + JobLevel + NumCompaniesWorked + StandardHours + YearsInCurrentRole + YearsInCurrentRole + YearlyIncomeGroup + DailyRate +
EmployeeNumber + JobRole, data = attritionData, family = binomial)
glm.full <- glm(Attrition ~ DistanceFromHome + Age + MonthlyIncome + Education + HourlyRate + HourlyRate + MonthlyIncome + PerformanceRating + WorkLifeBalance +
EmployeeCount + JobLevel + NumCompaniesWorked + StandardHours + YearsInCurrentRole + YearsInCurrentRole + YearlyIncomeGroup + DailyRate +
EmployeeNumber + JobRole + Over18, data = attritionData, family = binomial)
glm.full <- glm(Attrition ~ DistanceFromHome + Age + MonthlyIncome + Education + HourlyRate + HourlyRate + MonthlyIncome + PerformanceRating + WorkLifeBalance +
EmployeeCount + JobLevel + NumCompaniesWorked + StandardHours + YearsInCurrentRole + YearsInCurrentRole + YearlyIncomeGroup + DailyRate +
EmployeeNumber + JobRole + StockOptionLevel, data = attritionData, family = binomial)
glm.full <- glm(Attrition ~ DistanceFromHome + Age + MonthlyIncome + Education + HourlyRate + HourlyRate + MonthlyIncome + PerformanceRating + WorkLifeBalance +
EmployeeCount + JobLevel + NumCompaniesWorked + StandardHours + YearsInCurrentRole + YearsInCurrentRole + YearlyIncomeGroup + DailyRate +
EmployeeNumber + JobRole + StockOptionLevel + YearsSinceLastPromotion + Department + EnvironmentSatisfaction, data = attritionData, family = binomial)
glm.full <- glm(Attrition ~ DistanceFromHome + Age + MonthlyIncome + Education + HourlyRate + HourlyRate + MonthlyIncome + PerformanceRating + WorkLifeBalance +
EmployeeCount + JobLevel + NumCompaniesWorked + StandardHours + YearsInCurrentRole + YearsInCurrentRole + YearlyIncomeGroup + DailyRate +
EmployeeNumber + JobRole + StockOptionLevel + YearsSinceLastPromotion + Department + EnvironmentSatisfaction, data = attritionData, family = binomial)
glm.null <- glm(Attrition ~ 1, data = attritionData, family = binomial)
DistanceFromHome + Age + MonthlyIncome + Education + HourlyRate + HourlyRate + MonthlyIncome + PerformanceRating + WorkLifeBalance +
EmployeeCount + JobLevel + NumCompaniesWorked + StandardHours + YearsInCurrentRole + YearsInCurrentRole + YearlyIncomeGroup + DailyRate +
EmployeeNumber + JobRole + StockOptionLevel + YearsSinceLastPromotion + Department + EnvironmentSatisfaction, data = attritionData)
lm.full <- glm(Attrition ~ DistanceFromHome + Age + MonthlyIncome + Education + HourlyRate + HourlyRate + MonthlyIncome + PerformanceRating + WorkLifeBalance +
EmployeeCount + JobLevel + NumCompaniesWorked + StandardHours + YearsInCurrentRole + YearsInCurrentRole + YearlyIncomeGroup + DailyRate +
EmployeeNumber + JobRole + StockOptionLevel + YearsSinceLastPromotion + Department + EnvironmentSatisfaction, data = attritionData, family = binomial)
lm.null <- glm(Attrition ~ 1, data = attritionData, family = binomial)
model.aic.stepwise <- step(lm.null, direction="both", trace=1, scope = ~ DistanceFromHome + Age + MonthlyIncome + Education + HourlyRate + HourlyRate + MonthlyIncome +
PerformanceRating + WorkLifeBalance + EmployeeCount + JobLevel + NumCompaniesWorked + StandardHours + YearsInCurrentRole + YearsInCurrentRole +
YearlyIncomeGroup + DailyRate + EmployeeNumber + JobRole + StockOptionLevel + YearsSinceLastPromotion + Department + EnvironmentSatisfaction,
data = attritionData, family = binomial)
lm.full <- glm(Attrition ~ DistanceFromHome + Age + MonthlyIncome + Education + HourlyRate + HourlyRate + MonthlyIncome + PerformanceRating + WorkLifeBalance +
JobLevel + NumCompaniesWorked + YearsInCurrentRole + YearsInCurrentRole + YearlyIncomeGroup + DailyRate + JobRole + StockOptionLevel +
YearsSinceLastPromotion + Department + EnvironmentSatisfaction, data = attritionData, family = binomial)
lm.null <- glm(Attrition ~ 1, data = attritionData, family = binomial)
model.aic.stepwise <- step(lm.null, direction="both", trace=1, scope = ~ DistanceFromHome + Age + MonthlyIncome + Education + HourlyRate + HourlyRate + MonthlyIncome +
PerformanceRating + WorkLifeBalance + JobLevel + NumCompaniesWorked + YearsInCurrentRole + YearsInCurrentRole + YearlyIncomeGroup + DailyRate +
JobRole + StockOptionLevel + YearsSinceLastPromotion + Department + EnvironmentSatisfaction, data = attritionData, family = binomial)
glm.full <- glm(Attrition ~ DistanceFromHome + Age + MonthlyIncome + Education + HourlyRate + HourlyRate + MonthlyIncome +
PerformanceRating + WorkLifeBalance + JobLevel + NumCompaniesWorked + YearsInCurrentRole + YearsInCurrentRole + YearlyIncomeGroup + DailyRate +
JobRole + StockOptionLevel + YearsSinceLastPromotion + Department + EnvironmentSatisfaction, data = attritionData, family = binomial)
glm.null <- glm(Attrition ~ 1, data = attritionData, family = binomial)
lm.full <- glm(Attrition ~ DistanceFromHome + Age + MonthlyIncome + Education + HourlyRate + HourlyRate + MonthlyIncome + PerformanceRating + WorkLifeBalance +
JobLevel + NumCompaniesWorked + YearsInCurrentRole + YearsInCurrentRole + YearlyIncomeGroup + DailyRate + JobRole + StockOptionLevel +
YearsSinceLastPromotion + Department + EnvironmentSatisfaction, data = attritionData, family = binomial)
lm.null <- glm(Attrition ~ 1, data = attritionData, family = binomial)
model.aic.stepwise <- step(glm.null, direction="both", trace=1, scope = ~ DistanceFromHome + Age + MonthlyIncome + Education + HourlyRate + HourlyRate + MonthlyIncome +
PerformanceRating + WorkLifeBalance + JobLevel + NumCompaniesWorked + YearsInCurrentRole + YearsInCurrentRole + YearlyIncomeGroup + DailyRate +
JobRole + StockOptionLevel + YearsSinceLastPromotion + Department + EnvironmentSatisfaction, data = attritionData, family = binomial)
pairs(~Attrition+JobLevel+PerformanceRating+MonthlyIncome+HourlyRate+Department, main="Stepwise Variable Selection Matrix")
pairs(~Attrition+JobLevel+PerformanceRating+MonthlyIncome+HourlyRate+Department,
data=attritionData, main="Stepwise Variable Selection Matrix")
bin<-hexbin(attritionData$MonthlyIncome, attritionData$Attrition, xbins=50)
plot(bin, main="Attrion Age HeatMap")
bin<-hexbin(attritionData$MonthlyIncome, attritionData$Attrition, xbins=50)
plot(bin, main="Attrion Monthly Income HeatMap", xlab="Monthly Income")
# heatmap of monthly income related to attrition
hexbinplot(DistanceFromHome ~ MonthlyIncome | Attrition, attritionData)
hexbinplot(DistanceFromHome ~ MonthlyIncome | Attrition, attritionData,
xlab="Monthly Income", ylab="Distance from Home")
# heatmap of attrition related to JobLevel
hexbinplot(DistanceFromHome ~ MonthlyIncome | Attrition, attritionData,
xlab="Monthly Income", ylab="Distance from Home")
hexbinplot(DistanceFromHome ~ JobLevel | Attrition, attritionData,
xlab="Job Level", ylab="Distance from Home")
hexbinplot(DistanceFromHome ~ JobLevel + AgeGroups | Attrition, attritionData,
xlab="Job Level", ylab="Distance from Home")
hexbinplot(DistanceFromHome ~ JobLevel + Age | Attrition, attritionData,
xlab="Job Level", ylab="Distance from Home")
# heatmap of monthly income related to attrition
hexbinplot(JobLevel ~ MonthlyIncome | Attrition, attritionData,
xlab="Monthly Income", ylab="Distance from Home")
# heatmap of attrition related to JobLevel
hexbinplot(DistanceFromHome ~ JobLevel | Attrition, attritionData,
xlab="Job Level", ylab="Distance from Home")
# heatmap of Job Level related to Monthly Income grouped by Attrition
hexbinplot(JobLevel ~ MonthlyIncome | Attrition, attritionData,
xlab="Job Level", ylab="Monthly Income")
# heatmap of Job Level related to Distance from Home grouped by Attrition
hexbinplot(DistanceFromHome ~ JobLevel | Attrition, attritionData,
xlab="Distance from Home", ylab="Job Level")
# heatmap of Distance from home related to performance rating grouped by Attrition
hexbinplot(DistanceFromHome ~ PerformanceRating | Attrition, attritionData,
xlab="Distance from Home", ylab="Performance Rating")
# heatmap of Job Level related to Monthly Income grouped by Attrition
hexbinplot(JobLevel ~ MonthlyIncome | Attrition, attritionData,
xlab="Job Level", ylab="Monthly Income")
# heatmap of Job Level related to Monthly Income grouped by Attrition
hexbinplot(JobLevel ~ MonthlyIncome | Attrition, attritionData,
xlab="Monthly Income", ylab="Job Level")
hexbinplot(JobLevel ~ MonthlyIncome | Attrition, attritionData,
xlab="Monthly Income", ylab="Job Level")
# heatmap of Distance From Home related to Job Level grouped by Attrition
hexbinplot(DistanceFromHome ~ JobLevel | Attrition, attritionData,
ylab="Distance from Home", xlab="Job Level")
# heatmap of Job Level related to Hourly Rate grouped by Attrition
hexbinplot(JobLevel ~ HourlyRate | Attrition, attritionData,
ylab="Job Level", xlab="Hourly Rate")
# heatmap of Job Level related to Hourly Rate grouped by Attrition
hexbinplot(JobLevel ~ HourlyRate | Attrition, attritionData,
ylab="Job Level", xlab="Hourly Rate")
hexbinplot(JobLevel ~ MonthlyIncome | Attrition, attritionData,
xlab="Monthly Income", ylab="Job Level")
# heatmap of Distance From Home related to Job Level grouped by Attrition
hexbinplot(DistanceFromHome ~ JobLevel | Attrition, attritionData,
ylab="Distance from Home", xlab="Job Level")
# heatmap of Job Level related to Hourly Rate grouped by Attrition
hexbinplot(JobLevel ~ HourlyRate | Attrition, attritionData,
ylab="Job Level", xlab="Hourly Rate")
# heatmap of Job Level related to Hourly Rate grouped by Attrition
hexbinplot(JobLevel ~ HourlyRate | Attrition, attritionData,
ylab="Job Level", xlab="Hourly Rate")
# heatmap of Department related to Hourly Rate grouped by Attrition
hexbinplot(Department ~ HourlyRate | Attrition, attritionData,
ylab="Job Level", xlab="Hourly Rate")
hexbinplot(as.factor(Department) ~ HourlyRate | Attrition, attritionData,
ylab="Department", xlab="Hourly Rate")
# heatmap of Education related to Hourly Rate grouped by Attrition
hexbinplot(Education ~ HourlyRate | Attrition, attritionData,
ylab="Education", xlab="Hourly Rate")
hexbinplot(as.integer(Education) ~ HourlyRate | Attrition, attritionData,
ylab="Education", xlab="Hourly Rate")
